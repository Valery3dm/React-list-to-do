{"ast":null,"code":"var _jsxFileName = \"F:\\\\WEB\\\\React\\\\React-list-to-do\\\\src\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\nimport Loader from './Loader';\nimport Modal from './Modal/Modal';\nconst AddTodo = React.lazy(() => new Promise(resolve => {\n  setTimeout(() => {\n    resolve(import('./Todo/AddTodo'));\n  }, 3000);\n}));\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5').then(response => response.json()).then(todos => {\n      setTimeout(() => {\n        setTodos(todos);\n        setLoading(false);\n      }, 2000);\n    });\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]));\n  }\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      removeTodo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"React tutorial\"), /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddTodo, {\n    onCreate: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), todos.length ? /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onToggle: toggleTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }) : loading ? null : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"No todos!\")));\n}\n\nexport default App;","map":{"version":3,"sources":["F:/WEB/React/React-list-to-do/src/App.js"],"names":["React","useEffect","TodoList","Context","Loader","Modal","AddTodo","lazy","Promise","resolve","setTimeout","App","todos","setTodos","useState","loading","setLoading","fetch","then","response","json","toggleTodo","id","map","todo","completed","removeTodo","filter","addTodo","title","concat","Date","now","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\nimport Loader from './Loader'\nimport Modal from './Modal/Modal'\n\nconst AddTodo = React.lazy(\n  () =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(import('./Todo/AddTodo'))\n      }, 3000)\n    })\n)\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTimeout(() => {\n          setTodos(todos)\n          setLoading(false)\n        }, 2000)\n      })\n  }, [])\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false\n        }\n      ])\n    )\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className='wrapper'>\n        <h1>React tutorial</h1>\n        <Modal />\n\n        <React.Suspense fallback={<Loader />}>\n          <AddTodo onCreate={addTodo} />\n        </React.Suspense>\n\n        {loading && <Loader />}\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          <p>No todos!</p>\n        )}\n      </div>\n    </Context.Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}