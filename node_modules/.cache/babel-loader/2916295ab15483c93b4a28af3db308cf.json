{"ast":null,"code":"var _jsxFileName = \"F:\\\\WEB\\\\React\\\\list-to-do\\\\src\\\\App.js\";\nimport React from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([{\n    id: 1,\n    comleted: false,\n    title: 'Купить хлеб'\n  }, {\n    id: 2,\n    comleted: false,\n    title: 'Купить масло'\n  }, {\n    id: 3,\n    comleted: false,\n    title: 'Купить молоко'\n  }]);\n\n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.comleted = !todo.comleted;\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      removeTodo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"React tutorial\"), todos.length ? /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onToggle: toggleTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 75\n    }\n  }, \"No todos!\")));\n}\n\nexport default App;","map":{"version":3,"sources":["F:/WEB/React/list-to-do/src/App.js"],"names":["React","TodoList","Context","App","todos","setTodos","useState","id","comleted","title","toggleTodo","map","todo","removeTodo","filter","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe,CACvC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAE,KAAlB;AAAyBC,IAAAA,KAAK,EAAC;AAA/B,GADuC,EAEvC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAE,KAAlB;AAAyBC,IAAAA,KAAK,EAAC;AAA/B,GAFuC,EAGvC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAE,KAAlB;AAAyBC,IAAAA,KAAK,EAAC;AAA/B,GAHuC,CAAf,CAA1B;;AAMA,WAASC,UAAT,CAAoBH,EAApB,EAAwB;AACtBF,IAAAA,QAAQ,CACND,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAI;AAChB,UAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAClBK,QAAAA,IAAI,CAACJ,QAAL,GAAgB,CAACI,IAAI,CAACJ,QAAtB;AACD;;AACD,aAAOI,IAAP;AACD,KALD,CADM,CAAR;AAQD;;AAED,WAASC,UAAT,CAAoBN,EAApB,EAAwB;AACtBF,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD;;AAED,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGGT,KAAK,CAACW,MAAN,gBAAe,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEX,KAAjB;AAAwB,IAAA,QAAQ,EAAEM,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,gBAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHpE,CADF,CADF;AAUD;;AAED,eAAeP,GAAf","sourcesContent":["import React from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {id: 1, comleted: false, title:'Купить хлеб'},\n    {id: 2, comleted: false, title:'Купить масло'},\n    {id: 3, comleted: false, title:'Купить молоко'}\n  ])\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.comleted = !todo.comleted\n        }\n        return todo\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className='wrapper'>\n        <h1>React tutorial</h1>\n\n        {todos.length ? <TodoList todos={todos} onToggle={toggleTodo}/> : <p>No todos!</p>}\n        \n      </div>\n    </Context.Provider>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}